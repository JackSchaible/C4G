//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CouponsForGiving.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class C4GEntities : DbContext
    {
        public C4GEntities()
            : base("name=C4GEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Campaign> Campaigns { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<cStatu> cStatus { get; set; }
        public DbSet<cUser> cUsers { get; set; }
        public DbSet<DealSEO> DealSEOs { get; set; }
        public DbSet<DealStatu> DealStatus { get; set; }
        public DbSet<MerchantLocation> MerchantLocations { get; set; }
        public DbSet<NewsletterUser> NewsletterUsers { get; set; }
        public DbSet<NPOMailingList> NPOMailingLists { get; set; }
        public DbSet<OrderStatu> OrderStatus { get; set; }
        public DbSet<PoliticalDivision> PoliticalDivisions { get; set; }
        public DbSet<Price> Prices { get; set; }
        public DbSet<PurchaseTransaction> PurchaseTransactions { get; set; }
        public DbSet<Theme> Themes { get; set; }
        public DbSet<NPO> NPOes { get; set; }
        public DbSet<Deal> Deals { get; set; }
        public DbSet<DealInstance> DealInstances { get; set; }
        public DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public DbSet<CardType> CardTypes { get; set; }
        public DbSet<PaymentOption> PaymentOptions { get; set; }
        public DbSet<MerchantStripeInfo> MerchantStripeInfoes { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<MerchantInfo> MerchantInfoes { get; set; }
        public DbSet<Merchant> Merchants { get; set; }
        public DbSet<MerchantSetting> MerchantSettings { get; set; }
        public DbSet<CampaignStatu> CampaignStatus { get; set; }
        public DbSet<RedeemDetail> RedeemDetails { get; set; }
        public DbSet<City> Cities { get; set; }
        public DbSet<FinePrint> FinePrints { get; set; }
        public DbSet<NPOSetting> NPOSettings { get; set; }
        public DbSet<News> News { get; set; }
    
        public virtual ObjectResult<cStatus_ListAll_Result> cStatus_ListAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cStatus_ListAll_Result>("cStatus_ListAll");
        }
    
        public virtual int Merchant_Update(Nullable<int> merchantid, string name, string largelogo, string smalllogo, string caddress, Nullable<int> cityid, string postalcode, string phonenumber, string website, Nullable<int> statusid)
        {
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var largelogoParameter = largelogo != null ?
                new ObjectParameter("largelogo", largelogo) :
                new ObjectParameter("largelogo", typeof(string));
    
            var smalllogoParameter = smalllogo != null ?
                new ObjectParameter("smalllogo", smalllogo) :
                new ObjectParameter("smalllogo", typeof(string));
    
            var caddressParameter = caddress != null ?
                new ObjectParameter("caddress", caddress) :
                new ObjectParameter("caddress", typeof(string));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var postalcodeParameter = postalcode != null ?
                new ObjectParameter("postalcode", postalcode) :
                new ObjectParameter("postalcode", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Merchant_Update", merchantidParameter, nameParameter, largelogoParameter, smalllogoParameter, caddressParameter, cityidParameter, postalcodeParameter, phonenumberParameter, websiteParameter, statusidParameter);
        }
    
        public virtual int NewsletterUser_Signup(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewsletterUser_Signup", emailParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_GetByURL(string uRL)
        {
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetByURL", uRLParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_GetByURL(string uRL, MergeOption mergeOption)
        {
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetByURL", mergeOption, uRLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NPO_Insert(string name, string npodescription, string caddress, Nullable<int> cityid, string postalcode, string website, string phonenumber, string email, Nullable<int> statusid, string logo, string url, Nullable<bool> useallmerchants)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var npodescriptionParameter = npodescription != null ?
                new ObjectParameter("npodescription", npodescription) :
                new ObjectParameter("npodescription", typeof(string));
    
            var caddressParameter = caddress != null ?
                new ObjectParameter("caddress", caddress) :
                new ObjectParameter("caddress", typeof(string));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var postalcodeParameter = postalcode != null ?
                new ObjectParameter("postalcode", postalcode) :
                new ObjectParameter("postalcode", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var useallmerchantsParameter = useallmerchants.HasValue ?
                new ObjectParameter("useallmerchants", useallmerchants) :
                new ObjectParameter("useallmerchants", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NPO_Insert", nameParameter, npodescriptionParameter, caddressParameter, cityidParameter, postalcodeParameter, websiteParameter, phonenumberParameter, emailParameter, statusidParameter, logoParameter, urlParameter, useallmerchantsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NPO_IsURLUnique(string testurl)
        {
            var testurlParameter = testurl != null ?
                new ObjectParameter("testurl", testurl) :
                new ObjectParameter("testurl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NPO_IsURLUnique", testurlParameter);
        }
    
        public virtual int NPO_Update(Nullable<int> npoid, string name, string npodescription, string caddress, Nullable<int> cityid, string postalcode, string website, string phonenumber, string email, Nullable<int> statusid, string logo, string url, Nullable<bool> useallmerchants)
        {
            var npoidParameter = npoid.HasValue ?
                new ObjectParameter("npoid", npoid) :
                new ObjectParameter("npoid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var npodescriptionParameter = npodescription != null ?
                new ObjectParameter("npodescription", npodescription) :
                new ObjectParameter("npodescription", typeof(string));
    
            var caddressParameter = caddress != null ?
                new ObjectParameter("caddress", caddress) :
                new ObjectParameter("caddress", typeof(string));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var postalcodeParameter = postalcode != null ?
                new ObjectParameter("postalcode", postalcode) :
                new ObjectParameter("postalcode", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var useallmerchantsParameter = useallmerchants.HasValue ?
                new ObjectParameter("useallmerchants", useallmerchants) :
                new ObjectParameter("useallmerchants", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_Update", npoidParameter, nameParameter, npodescriptionParameter, caddressParameter, cityidParameter, postalcodeParameter, websiteParameter, phonenumberParameter, emailParameter, statusidParameter, logoParameter, urlParameter, useallmerchantsParameter);
        }
    
        public virtual int NPOcUser_Insert(string username, Nullable<int> npoid)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var npoidParameter = npoid.HasValue ?
                new ObjectParameter("npoid", npoid) :
                new ObjectParameter("npoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPOcUser_Insert", usernameParameter, npoidParameter);
        }
    
        public virtual ObjectResult<City_ListAllWithDivisionCode_Result> City_ListAllWithDivisionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City_ListAllWithDivisionCode_Result>("City_ListAllWithDivisionCode");
        }
    
        public virtual int NPO_GetByUserid(Nullable<int> cuserid)
        {
            var cuseridParameter = cuserid.HasValue ?
                new ObjectParameter("cuserid", cuserid) :
                new ObjectParameter("cuserid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_GetByUserid", cuseridParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_GetByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_GetByUsername(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetByUsername", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_GetByNPO(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_GetByNPO", nPOIDParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_GetByNPO(Nullable<int> nPOID, MergeOption mergeOption)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_GetByNPO", mergeOption, nPOIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NPO_HasCampaign(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NPO_HasCampaign", nPOIDParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_ListByUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_ListByUser", usernameParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_ListByUser(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_ListByUser", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Theme_HasActive(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Theme_HasActive", usernameParameter);
        }
    
        public virtual int Theme_Insert(string name, string username, string desc, string content, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Theme_Insert", nameParameter, usernameParameter, descParameter, contentParameter, activeParameter);
        }
    
        public virtual int Theme_SetAsActive(string username, Nullable<int> themeID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var themeIDParameter = themeID.HasValue ?
                new ObjectParameter("ThemeID", themeID) :
                new ObjectParameter("ThemeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Theme_SetAsActive", usernameParameter, themeIDParameter);
        }
    
        public virtual ObjectResult<string> City_GetFullLocationByCityCode(Nullable<int> cityid)
        {
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("City_GetFullLocationByCityCode", cityidParameter);
        }
    
        public virtual ObjectResult<cStatus_GetByID_Result> cStatus_GetByID(Nullable<int> statusid)
        {
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cStatus_GetByID_Result>("cStatus_GetByID", statusidParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_Get(Nullable<int> themeID)
        {
            var themeIDParameter = themeID.HasValue ?
                new ObjectParameter("ThemeID", themeID) :
                new ObjectParameter("ThemeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_Get", themeIDParameter);
        }
    
        public virtual ObjectResult<Theme> Theme_Get(Nullable<int> themeID, MergeOption mergeOption)
        {
            var themeIDParameter = themeID.HasValue ?
                new ObjectParameter("ThemeID", themeID) :
                new ObjectParameter("ThemeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Theme>("Theme_Get", mergeOption, themeIDParameter);
        }
    
        public virtual int Theme_Update(Nullable<int> themeID, string name, string desc, string content)
        {
            var themeIDParameter = themeID.HasValue ?
                new ObjectParameter("ThemeID", themeID) :
                new ObjectParameter("ThemeID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Theme_Update", themeIDParameter, nameParameter, descParameter, contentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DealInstance_Insert(Nullable<int> dealid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.DateTime> redeemableafter, Nullable<System.DateTime> expirydate, Nullable<int> dealstatusid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var redeemableafterParameter = redeemableafter.HasValue ?
                new ObjectParameter("redeemableafter", redeemableafter) :
                new ObjectParameter("redeemableafter", typeof(System.DateTime));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("expirydate", expirydate) :
                new ObjectParameter("expirydate", typeof(System.DateTime));
    
            var dealstatusidParameter = dealstatusid.HasValue ?
                new ObjectParameter("dealstatusid", dealstatusid) :
                new ObjectParameter("dealstatusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DealInstance_Insert", dealidParameter, startdateParameter, enddateParameter, redeemableafterParameter, expirydateParameter, dealstatusidParameter);
        }
    
        public virtual int DealInstance_Update(Nullable<int> dealinstanceid, Nullable<int> dealid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<System.DateTime> redeemableafter, Nullable<System.DateTime> expirydate, Nullable<int> dealstatusid)
        {
            var dealinstanceidParameter = dealinstanceid.HasValue ?
                new ObjectParameter("dealinstanceid", dealinstanceid) :
                new ObjectParameter("dealinstanceid", typeof(int));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var redeemableafterParameter = redeemableafter.HasValue ?
                new ObjectParameter("redeemableafter", redeemableafter) :
                new ObjectParameter("redeemableafter", typeof(System.DateTime));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("expirydate", expirydate) :
                new ObjectParameter("expirydate", typeof(System.DateTime));
    
            var dealstatusidParameter = dealstatusid.HasValue ?
                new ObjectParameter("dealstatusid", dealstatusid) :
                new ObjectParameter("dealstatusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DealInstance_Update", dealinstanceidParameter, dealidParameter, startdateParameter, enddateParameter, redeemableafterParameter, expirydateParameter, dealstatusidParameter);
        }
    
        public virtual int DealMerchantLocation_Insert(Nullable<int> dealid, Nullable<int> merchantlocationid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var merchantlocationidParameter = merchantlocationid.HasValue ?
                new ObjectParameter("merchantlocationid", merchantlocationid) :
                new ObjectParameter("merchantlocationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DealMerchantLocation_Insert", dealidParameter, merchantlocationidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DealSEO_Insert(Nullable<int> dealid, string metakeywords, string metadescription)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var metakeywordsParameter = metakeywords != null ?
                new ObjectParameter("metakeywords", metakeywords) :
                new ObjectParameter("metakeywords", typeof(string));
    
            var metadescriptionParameter = metadescription != null ?
                new ObjectParameter("metadescription", metadescription) :
                new ObjectParameter("metadescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DealSEO_Insert", dealidParameter, metakeywordsParameter, metadescriptionParameter);
        }
    
        public virtual int DealSEO_Update(Nullable<int> dealseoid, Nullable<int> dealid, string metakeywords, string metadescription)
        {
            var dealseoidParameter = dealseoid.HasValue ?
                new ObjectParameter("dealseoid", dealseoid) :
                new ObjectParameter("dealseoid", typeof(int));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var metakeywordsParameter = metakeywords != null ?
                new ObjectParameter("metakeywords", metakeywords) :
                new ObjectParameter("metakeywords", typeof(string));
    
            var metadescriptionParameter = metadescription != null ?
                new ObjectParameter("metadescription", metadescription) :
                new ObjectParameter("metadescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DealSEO_Update", dealseoidParameter, dealidParameter, metakeywordsParameter, metadescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MerchantLocation_Insert(Nullable<int> merchantid, string cAddress, Nullable<int> cityid, string phonenumber)
        {
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var cAddressParameter = cAddress != null ?
                new ObjectParameter("cAddress", cAddress) :
                new ObjectParameter("cAddress", typeof(string));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MerchantLocation_Insert", merchantidParameter, cAddressParameter, cityidParameter, phonenumberParameter);
        }
    
        public virtual int MerchantLocation_Update(Nullable<int> merchantlocationid, Nullable<int> merchantid, string caddress, Nullable<int> cityID, string phonenumber)
        {
            var merchantlocationidParameter = merchantlocationid.HasValue ?
                new ObjectParameter("merchantlocationid", merchantlocationid) :
                new ObjectParameter("merchantlocationid", typeof(int));
    
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var caddressParameter = caddress != null ?
                new ObjectParameter("caddress", caddress) :
                new ObjectParameter("caddress", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MerchantLocation_Update", merchantlocationidParameter, merchantidParameter, caddressParameter, cityIDParameter, phonenumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Price_Insert(Nullable<int> dealid, Nullable<decimal> retailvalue, Nullable<decimal> giftvalue, Nullable<decimal> merchantsplit, Nullable<decimal> nposplit, Nullable<decimal> oursplit)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var retailvalueParameter = retailvalue.HasValue ?
                new ObjectParameter("retailvalue", retailvalue) :
                new ObjectParameter("retailvalue", typeof(decimal));
    
            var giftvalueParameter = giftvalue.HasValue ?
                new ObjectParameter("giftvalue", giftvalue) :
                new ObjectParameter("giftvalue", typeof(decimal));
    
            var merchantsplitParameter = merchantsplit.HasValue ?
                new ObjectParameter("merchantsplit", merchantsplit) :
                new ObjectParameter("merchantsplit", typeof(decimal));
    
            var nposplitParameter = nposplit.HasValue ?
                new ObjectParameter("nposplit", nposplit) :
                new ObjectParameter("nposplit", typeof(decimal));
    
            var oursplitParameter = oursplit.HasValue ?
                new ObjectParameter("oursplit", oursplit) :
                new ObjectParameter("oursplit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Price_Insert", dealidParameter, retailvalueParameter, giftvalueParameter, merchantsplitParameter, nposplitParameter, oursplitParameter);
        }
    
        public virtual int Price_Update(Nullable<int> priceid, Nullable<int> dealid, Nullable<decimal> retailvalue, Nullable<decimal> giftvalue, Nullable<decimal> merchantsplit, Nullable<decimal> nposplit, Nullable<decimal> oursplit)
        {
            var priceidParameter = priceid.HasValue ?
                new ObjectParameter("priceid", priceid) :
                new ObjectParameter("priceid", typeof(int));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var retailvalueParameter = retailvalue.HasValue ?
                new ObjectParameter("retailvalue", retailvalue) :
                new ObjectParameter("retailvalue", typeof(decimal));
    
            var giftvalueParameter = giftvalue.HasValue ?
                new ObjectParameter("giftvalue", giftvalue) :
                new ObjectParameter("giftvalue", typeof(decimal));
    
            var merchantsplitParameter = merchantsplit.HasValue ?
                new ObjectParameter("merchantsplit", merchantsplit) :
                new ObjectParameter("merchantsplit", typeof(decimal));
    
            var nposplitParameter = nposplit.HasValue ?
                new ObjectParameter("nposplit", nposplit) :
                new ObjectParameter("nposplit", typeof(decimal));
    
            var oursplitParameter = oursplit.HasValue ?
                new ObjectParameter("oursplit", oursplit) :
                new ObjectParameter("oursplit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Price_Update", priceidParameter, dealidParameter, retailvalueParameter, giftvalueParameter, merchantsplitParameter, nposplitParameter, oursplitParameter);
        }
    
        public virtual int DealMerchantLocation_Delete(Nullable<int> dealid, Nullable<int> merchantlocationid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var merchantlocationidParameter = merchantlocationid.HasValue ?
                new ObjectParameter("merchantlocationid", merchantlocationid) :
                new ObjectParameter("merchantlocationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DealMerchantLocation_Delete", dealidParameter, merchantlocationidParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetByUsername(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetByUsername", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<MerchantLocation_GetActiveByDealID_Result> MerchantLocation_GetActiveByDealID(Nullable<int> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantLocation_GetActiveByDealID_Result>("MerchantLocation_GetActiveByDealID", dealidParameter);
        }
    
        public virtual ObjectResult<MerchantLocation_GetByDealID_Result> MerchantLocation_GetByDealID(Nullable<int> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantLocation_GetByDealID_Result>("MerchantLocation_GetByDealID", dealidParameter);
        }
    
        public virtual ObjectResult<MerchantLocation_GetByMerchantID_Result> MerchantLocation_GetByMerchantID(Nullable<int> merchantid)
        {
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantLocation_GetByMerchantID_Result>("MerchantLocation_GetByMerchantID", merchantidParameter);
        }
    
        public virtual ObjectResult<MerchantLocation_GetEligible_Result> MerchantLocation_GetEligible(Nullable<int> merchantid, Nullable<int> dealid)
        {
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantLocation_GetEligible_Result>("MerchantLocation_GetEligible", merchantidParameter, dealidParameter);
        }
    
        public virtual ObjectResult<DealInstance> Deal_GetByID(Nullable<int> dealInstanceID)
        {
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("Deal_GetByID", dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<DealInstance> Deal_GetByID(Nullable<int> dealInstanceID, MergeOption mergeOption)
        {
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("Deal_GetByID", mergeOption, dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PurchaseTransaction_Insert(string cUser)
        {
            var cUserParameter = cUser != null ?
                new ObjectParameter("cUser", cUser) :
                new ObjectParameter("cUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PurchaseTransaction_Insert", cUserParameter);
        }
    
        public virtual int PurchaseOrder_Insert(Nullable<int> dealID, Nullable<int> campaignID, Nullable<int> transactionID, Nullable<decimal> purchaseAmount, Nullable<decimal> nPOSplit, Nullable<decimal> merchantSplit, Nullable<decimal> ourSplit)
        {
            var dealIDParameter = dealID.HasValue ?
                new ObjectParameter("DealID", dealID) :
                new ObjectParameter("DealID", typeof(int));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(int));
    
            var purchaseAmountParameter = purchaseAmount.HasValue ?
                new ObjectParameter("PurchaseAmount", purchaseAmount) :
                new ObjectParameter("PurchaseAmount", typeof(decimal));
    
            var nPOSplitParameter = nPOSplit.HasValue ?
                new ObjectParameter("NPOSplit", nPOSplit) :
                new ObjectParameter("NPOSplit", typeof(decimal));
    
            var merchantSplitParameter = merchantSplit.HasValue ?
                new ObjectParameter("MerchantSplit", merchantSplit) :
                new ObjectParameter("MerchantSplit", typeof(decimal));
    
            var ourSplitParameter = ourSplit.HasValue ?
                new ObjectParameter("OurSplit", ourSplit) :
                new ObjectParameter("OurSplit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrder_Insert", dealIDParameter, campaignIDParameter, transactionIDParameter, purchaseAmountParameter, nPOSplitParameter, merchantSplitParameter, ourSplitParameter);
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_List");
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_List", mergeOption);
        }
    
        public virtual ObjectResult<Price> Price_GetByDealInstance(Nullable<int> dealInstanceID)
        {
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Price>("Price_GetByDealInstance", dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<Price> Price_GetByDealInstance(Nullable<int> dealInstanceID, MergeOption mergeOption)
        {
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Price>("Price_GetByDealInstance", mergeOption, dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<PaymentOption_ListByUser_Result> PaymentOption_ListByUser(string cUsername)
        {
            var cUsernameParameter = cUsername != null ?
                new ObjectParameter("cUsername", cUsername) :
                new ObjectParameter("cUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentOption_ListByUser_Result>("PaymentOption_ListByUser", cUsernameParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_Get(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_Get", campaignIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_Get(Nullable<int> campaignID, MergeOption mergeOption)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_Get", mergeOption, campaignIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_GetByNPO(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_GetByNPO", nPOIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_GetByNPO(Nullable<int> nPOID, MergeOption mergeOption)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_GetByNPO", mergeOption, nPOIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Campaign_Insert(string name, Nullable<int> npoid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string campaigndescription, Nullable<int> fundraisinggoal, string campaignimage, Nullable<bool> showonhome, Nullable<int> displaypriority, string campaigngoal)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var npoidParameter = npoid.HasValue ?
                new ObjectParameter("npoid", npoid) :
                new ObjectParameter("npoid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var campaigndescriptionParameter = campaigndescription != null ?
                new ObjectParameter("campaigndescription", campaigndescription) :
                new ObjectParameter("campaigndescription", typeof(string));
    
            var fundraisinggoalParameter = fundraisinggoal.HasValue ?
                new ObjectParameter("fundraisinggoal", fundraisinggoal) :
                new ObjectParameter("fundraisinggoal", typeof(int));
    
            var campaignimageParameter = campaignimage != null ?
                new ObjectParameter("campaignimage", campaignimage) :
                new ObjectParameter("campaignimage", typeof(string));
    
            var showonhomeParameter = showonhome.HasValue ?
                new ObjectParameter("showonhome", showonhome) :
                new ObjectParameter("showonhome", typeof(bool));
    
            var displaypriorityParameter = displaypriority.HasValue ?
                new ObjectParameter("displaypriority", displaypriority) :
                new ObjectParameter("displaypriority", typeof(int));
    
            var campaigngoalParameter = campaigngoal != null ?
                new ObjectParameter("campaigngoal", campaigngoal) :
                new ObjectParameter("campaigngoal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Campaign_Insert", nameParameter, npoidParameter, startdateParameter, enddateParameter, campaigndescriptionParameter, fundraisinggoalParameter, campaignimageParameter, showonhomeParameter, displaypriorityParameter, campaigngoalParameter);
        }
    
        public virtual ObjectResult<Campaign_ListActiveByNPO_Result> Campaign_ListActiveByNPO(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign_ListActiveByNPO_Result>("Campaign_ListActiveByNPO", nPOIDParameter);
        }
    
        public virtual ObjectResult<Campaign_ListByNPO_Result> Campaign_ListByNPO(Nullable<int> npoid)
        {
            var npoidParameter = npoid.HasValue ?
                new ObjectParameter("npoid", npoid) :
                new ObjectParameter("npoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign_ListByNPO_Result>("Campaign_ListByNPO", npoidParameter);
        }
    
        public virtual int Campaign_Update(Nullable<int> campaignid, string name, Nullable<int> npoid, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string campaigndescription, Nullable<int> fundraisinggoal, string campaignimage, Nullable<bool> showonhome, Nullable<int> displaypriority, string campaigngoal)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var npoidParameter = npoid.HasValue ?
                new ObjectParameter("npoid", npoid) :
                new ObjectParameter("npoid", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var campaigndescriptionParameter = campaigndescription != null ?
                new ObjectParameter("campaigndescription", campaigndescription) :
                new ObjectParameter("campaigndescription", typeof(string));
    
            var fundraisinggoalParameter = fundraisinggoal.HasValue ?
                new ObjectParameter("fundraisinggoal", fundraisinggoal) :
                new ObjectParameter("fundraisinggoal", typeof(int));
    
            var campaignimageParameter = campaignimage != null ?
                new ObjectParameter("campaignimage", campaignimage) :
                new ObjectParameter("campaignimage", typeof(string));
    
            var showonhomeParameter = showonhome.HasValue ?
                new ObjectParameter("showonhome", showonhome) :
                new ObjectParameter("showonhome", typeof(bool));
    
            var displaypriorityParameter = displaypriority.HasValue ?
                new ObjectParameter("displaypriority", displaypriority) :
                new ObjectParameter("displaypriority", typeof(int));
    
            var campaigngoalParameter = campaigngoal != null ?
                new ObjectParameter("campaigngoal", campaigngoal) :
                new ObjectParameter("campaigngoal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Campaign_Update", campaignidParameter, nameParameter, npoidParameter, startdateParameter, enddateParameter, campaigndescriptionParameter, fundraisinggoalParameter, campaignimageParameter, showonhomeParameter, displaypriorityParameter, campaigngoalParameter);
        }
    
        public virtual ObjectResult<DealInstance_Get_Result> DealInstance_Get(Nullable<int> dealinstanceid)
        {
            var dealinstanceidParameter = dealinstanceid.HasValue ?
                new ObjectParameter("dealinstanceid", dealinstanceid) :
                new ObjectParameter("dealinstanceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance_Get_Result>("DealInstance_Get", dealinstanceidParameter);
        }
    
        public virtual ObjectResult<cUser_GetByUsername_Result> cUser_GetByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cUser_GetByUsername_Result>("cUser_GetByUsername", usernameParameter);
        }
    
        public virtual int cUser_Insert(string username, string stripeKey)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var stripeKeyParameter = stripeKey != null ?
                new ObjectParameter("StripeKey", stripeKey) :
                new ObjectParameter("StripeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cUser_Insert", usernameParameter, stripeKeyParameter);
        }
    
        public virtual ObjectResult<cUser> cUser_GetByName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cUser>("cUser_GetByName", usernameParameter);
        }
    
        public virtual ObjectResult<cUser> cUser_GetByName(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cUser>("cUser_GetByName", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<PaymentOption> PaymentOption_Get(Nullable<int> paymentOptionID)
        {
            var paymentOptionIDParameter = paymentOptionID.HasValue ?
                new ObjectParameter("PaymentOptionID", paymentOptionID) :
                new ObjectParameter("PaymentOptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentOption>("PaymentOption_Get", paymentOptionIDParameter);
        }
    
        public virtual ObjectResult<PaymentOption> PaymentOption_Get(Nullable<int> paymentOptionID, MergeOption mergeOption)
        {
            var paymentOptionIDParameter = paymentOptionID.HasValue ?
                new ObjectParameter("PaymentOptionID", paymentOptionID) :
                new ObjectParameter("PaymentOptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentOption>("PaymentOption_Get", mergeOption, paymentOptionIDParameter);
        }
    
        public virtual int PaymentOption_Delete(Nullable<int> paymentOptionID)
        {
            var paymentOptionIDParameter = paymentOptionID.HasValue ?
                new ObjectParameter("PaymentOptionID", paymentOptionID) :
                new ObjectParameter("PaymentOptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentOption_Delete", paymentOptionIDParameter);
        }
    
        public virtual int CampaignDealInstance_Insert(Nullable<int> campaignid, Nullable<int> dealinstanceid)
        {
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(int));
    
            var dealinstanceidParameter = dealinstanceid.HasValue ?
                new ObjectParameter("dealinstanceid", dealinstanceid) :
                new ObjectParameter("dealinstanceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignDealInstance_Insert", campaignidParameter, dealinstanceidParameter);
        }
    
        public virtual ObjectResult<MerchantStripeInfo> MerchantStripeInfo_Get(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantStripeInfo>("MerchantStripeInfo_Get", merchantIDParameter);
        }
    
        public virtual ObjectResult<MerchantStripeInfo> MerchantStripeInfo_Get(Nullable<int> merchantID, MergeOption mergeOption)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantStripeInfo>("MerchantStripeInfo_Get", mergeOption, merchantIDParameter);
        }
    
        public virtual int MerchantStripeInfo_Insert(Nullable<int> merchantID, string apiKey)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var apiKeyParameter = apiKey != null ?
                new ObjectParameter("ApiKey", apiKey) :
                new ObjectParameter("ApiKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MerchantStripeInfo_Insert", merchantIDParameter, apiKeyParameter);
        }
    
        public virtual ObjectResult<Deals_ListforSearchGrid_Result> Deals_ListforSearchGrid(string city, string politicalDivision, string country)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var politicalDivisionParameter = politicalDivision != null ?
                new ObjectParameter("PoliticalDivision", politicalDivision) :
                new ObjectParameter("PoliticalDivision", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Deals_ListforSearchGrid_Result>("Deals_ListforSearchGrid", cityParameter, politicalDivisionParameter, countryParameter);
        }
    
        public virtual int PreferredCity_InsertOrUpdate(string username, Nullable<int> cityID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("cityID", cityID) :
                new ObjectParameter("cityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreferredCity_InsertOrUpdate", usernameParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<GetCities_Result> GetCities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCities_Result>("GetCities");
        }
    
        public virtual int PreferredCity_Get(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PreferredCity_Get", usernameParameter);
        }
    
        public virtual int NPO_AddMerchantPartner(Nullable<int> merchantID, string username)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_AddMerchantPartner", merchantIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<string> Merchant_ApproveRequest(Nullable<int> merchantID, Nullable<int> nPOID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Merchant_ApproveRequest", merchantIDParameter, nPOIDParameter);
        }
    
        public virtual ObjectResult<ListPendingMerchants_Result> ListPendingMerchants()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListPendingMerchants_Result>("ListPendingMerchants");
        }
    
        public virtual ObjectResult<ListPendingNPOs_Result> ListPendingNPOs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListPendingNPOs_Result>("ListPendingNPOs");
        }
    
        public virtual int Merchant_Approve(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Merchant_Approve", merchantIDParameter);
        }
    
        public virtual int NPO_Approve(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_Approve", nPOIDParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_Get(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_Get", nPOIDParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_Get(Nullable<int> nPOID, MergeOption mergeOption)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_Get", mergeOption, nPOIDParameter);
        }
    
        public virtual int ApproveAllPendingAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApproveAllPendingAccounts");
        }
    
        public virtual int Merchant_ApproveAllPending()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Merchant_ApproveAllPending");
        }
    
        public virtual int NPO_ApproveAllPending()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_ApproveAllPending");
        }
    
        public virtual ObjectResult<Merchant> Merchant_Get(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_Get", merchantIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_Get(Nullable<int> merchantID, MergeOption mergeOption)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_Get", mergeOption, merchantIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListByCity(Nullable<int> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListByCity", cityIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListByCity(Nullable<int> cityID, MergeOption mergeOption)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListByCity", mergeOption, cityIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListGlobal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListGlobal");
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListGlobal(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListGlobal", mergeOption);
        }
    
        public virtual ObjectResult<Nullable<int>> Merchant_Insert(string name, string largelogo, string smalllogo, string caddress, Nullable<int> cityid, string postalcode, string phonenumber, string website, Nullable<int> statusid, string username, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var largelogoParameter = largelogo != null ?
                new ObjectParameter("largelogo", largelogo) :
                new ObjectParameter("largelogo", typeof(string));
    
            var smalllogoParameter = smalllogo != null ?
                new ObjectParameter("smalllogo", smalllogo) :
                new ObjectParameter("smalllogo", typeof(string));
    
            var caddressParameter = caddress != null ?
                new ObjectParameter("caddress", caddress) :
                new ObjectParameter("caddress", typeof(string));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var postalcodeParameter = postalcode != null ?
                new ObjectParameter("postalcode", postalcode) :
                new ObjectParameter("postalcode", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Merchant_Insert", nameParameter, largelogoParameter, smalllogoParameter, caddressParameter, cityidParameter, postalcodeParameter, phonenumberParameter, websiteParameter, statusidParameter, usernameParameter, emailParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetFeatured()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetFeatured");
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetFeatured(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetFeatured", mergeOption);
        }
    
        public virtual ObjectResult<NPO> NPO_GetFeatured()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetFeatured");
        }
    
        public virtual ObjectResult<NPO> NPO_GetFeatured(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_GetFeatured", mergeOption);
        }
    
        public virtual ObjectResult<Nullable<int>> Campaign_IsNameUnique(string name, Nullable<int> nPOID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Campaign_IsNameUnique", nameParameter, nPOIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_GetByName(string name, string nPOURL)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nPOURLParameter = nPOURL != null ?
                new ObjectParameter("NPOURL", nPOURL) :
                new ObjectParameter("NPOURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_GetByName", nameParameter, nPOURLParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_GetByName(string name, string nPOURL, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nPOURLParameter = nPOURL != null ?
                new ObjectParameter("NPOURL", nPOURL) :
                new ObjectParameter("NPOURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_GetByName", mergeOption, nameParameter, nPOURLParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetByName", nameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_GetByName(string name, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_GetByName", mergeOption, nameParameter);
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_ListByMerchant(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_ListByMerchant", merchantIDParameter);
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_ListByMerchant(Nullable<int> merchantID, MergeOption mergeOption)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_ListByMerchant", mergeOption, merchantIDParameter);
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_GetByDealName(string dealName, Nullable<int> merchantID)
        {
            var dealNameParameter = dealName != null ?
                new ObjectParameter("DealName", dealName) :
                new ObjectParameter("DealName", typeof(string));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_GetByDealName", dealNameParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<DealInstance> DealInstance_GetByDealName(string dealName, Nullable<int> merchantID, MergeOption mergeOption)
        {
            var dealNameParameter = dealName != null ?
                new ObjectParameter("DealName", dealName) :
                new ObjectParameter("DealName", typeof(string));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("DealInstance_GetByDealName", mergeOption, dealNameParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<Country> Countries_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Country>("Countries_List");
        }
    
        public virtual ObjectResult<Country> Countries_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Country>("Countries_List", mergeOption);
        }
    
        public virtual ObjectResult<PoliticalDivision> Provinces_ListByCountry(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoliticalDivision>("Provinces_ListByCountry", countryCodeParameter);
        }
    
        public virtual ObjectResult<PoliticalDivision> Provinces_ListByCountry(string countryCode, MergeOption mergeOption)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PoliticalDivision>("Provinces_ListByCountry", mergeOption, countryCodeParameter);
        }
    
        public virtual ObjectResult<MerchantSetting> MerchantSetting_GetByMerchant(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantSetting>("MerchantSetting_GetByMerchant", usernameParameter);
        }
    
        public virtual ObjectResult<MerchantSetting> MerchantSetting_GetByMerchant(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantSetting>("MerchantSetting_GetByMerchant", mergeOption, usernameParameter);
        }
    
        public virtual int MerchantSetting_Insert(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MerchantSetting_Insert", merchantIDParameter);
        }
    
        public virtual int MerchantSetting_Update(Nullable<int> merchantID, Nullable<bool> autoAcceptRequests)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var autoAcceptRequestsParameter = autoAcceptRequests.HasValue ?
                new ObjectParameter("AutoAcceptRequests", autoAcceptRequests) :
                new ObjectParameter("AutoAcceptRequests", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MerchantSetting_Update", merchantIDParameter, autoAcceptRequestsParameter);
        }
    
        public virtual ObjectResult<Deal_GetEligibleByUsername_Result> Deal_GetEligibleByUsername(string username, Nullable<System.DateTime> endDate)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Deal_GetEligibleByUsername_Result>("Deal_GetEligibleByUsername", usernameParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> Campaign_IsComplete(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Campaign_IsComplete", campaignIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Campaign_Save(Nullable<int> campaignID, string username, string name, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string campaignDescription, Nullable<int> fundraisingGoal, string campaignImage, Nullable<bool> showOnHome, Nullable<int> displayPriority, string campaignGoal)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var campaignDescriptionParameter = campaignDescription != null ?
                new ObjectParameter("CampaignDescription", campaignDescription) :
                new ObjectParameter("CampaignDescription", typeof(string));
    
            var fundraisingGoalParameter = fundraisingGoal.HasValue ?
                new ObjectParameter("FundraisingGoal", fundraisingGoal) :
                new ObjectParameter("FundraisingGoal", typeof(int));
    
            var campaignImageParameter = campaignImage != null ?
                new ObjectParameter("CampaignImage", campaignImage) :
                new ObjectParameter("CampaignImage", typeof(string));
    
            var showOnHomeParameter = showOnHome.HasValue ?
                new ObjectParameter("ShowOnHome", showOnHome) :
                new ObjectParameter("ShowOnHome", typeof(bool));
    
            var displayPriorityParameter = displayPriority.HasValue ?
                new ObjectParameter("DisplayPriority", displayPriority) :
                new ObjectParameter("DisplayPriority", typeof(int));
    
            var campaignGoalParameter = campaignGoal != null ?
                new ObjectParameter("CampaignGoal", campaignGoal) :
                new ObjectParameter("CampaignGoal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Campaign_Save", campaignIDParameter, usernameParameter, nameParameter, startDateParameter, endDateParameter, campaignDescriptionParameter, fundraisingGoalParameter, campaignImageParameter, showOnHomeParameter, displayPriorityParameter, campaignGoalParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListActiveByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListActiveByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListActiveByUsername(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListActiveByUsername", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListIncompleteByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListIncompleteByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListIncompleteByUsername(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListIncompleteByUsername", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<string> CampaignDealInstance_InsertIfNotExists(Nullable<int> campaignID, Nullable<int> dealInstanceID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CampaignDealInstance_InsertIfNotExists", campaignIDParameter, dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<NPO_GetByUser_Result> NPO_GetByUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO_GetByUser_Result>("NPO_GetByUser", usernameParameter);
        }
    
        public virtual int Campaign_UpdateImage(Nullable<int> campaignID, string imagePath)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Campaign_UpdateImage", campaignIDParameter, imagePathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RedeemDetails_Insert(Nullable<int> dealid, string additionaldetails, string restrictions, string highlights, string redeemdetailsdescription)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var additionaldetailsParameter = additionaldetails != null ?
                new ObjectParameter("additionaldetails", additionaldetails) :
                new ObjectParameter("additionaldetails", typeof(string));
    
            var restrictionsParameter = restrictions != null ?
                new ObjectParameter("restrictions", restrictions) :
                new ObjectParameter("restrictions", typeof(string));
    
            var highlightsParameter = highlights != null ?
                new ObjectParameter("highlights", highlights) :
                new ObjectParameter("highlights", typeof(string));
    
            var redeemdetailsdescriptionParameter = redeemdetailsdescription != null ?
                new ObjectParameter("redeemdetailsdescription", redeemdetailsdescription) :
                new ObjectParameter("redeemdetailsdescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RedeemDetails_Insert", dealidParameter, additionaldetailsParameter, restrictionsParameter, highlightsParameter, redeemdetailsdescriptionParameter);
        }
    
        public virtual int RedeemDetails_Update(Nullable<int> redeemdetailsid, Nullable<int> dealid, string additionaldetails, string restrictions, string highlights, string redeemdetailsdescription)
        {
            var redeemdetailsidParameter = redeemdetailsid.HasValue ?
                new ObjectParameter("redeemdetailsid", redeemdetailsid) :
                new ObjectParameter("redeemdetailsid", typeof(int));
    
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var additionaldetailsParameter = additionaldetails != null ?
                new ObjectParameter("additionaldetails", additionaldetails) :
                new ObjectParameter("additionaldetails", typeof(string));
    
            var restrictionsParameter = restrictions != null ?
                new ObjectParameter("restrictions", restrictions) :
                new ObjectParameter("restrictions", typeof(string));
    
            var highlightsParameter = highlights != null ?
                new ObjectParameter("highlights", highlights) :
                new ObjectParameter("highlights", typeof(string));
    
            var redeemdetailsdescriptionParameter = redeemdetailsdescription != null ?
                new ObjectParameter("redeemdetailsdescription", redeemdetailsdescription) :
                new ObjectParameter("redeemdetailsdescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RedeemDetails_Update", redeemdetailsidParameter, dealidParameter, additionaldetailsParameter, restrictionsParameter, highlightsParameter, redeemdetailsdescriptionParameter);
        }
    
        public virtual ObjectResult<NPO> Merchant_ListNPORequests(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("Merchant_ListNPORequests", usernameParameter);
        }
    
        public virtual ObjectResult<NPO> Merchant_ListNPORequests(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("Merchant_ListNPORequests", mergeOption, usernameParameter);
        }
    
        public virtual int Merchant_ApproveNPORequest(string username, Nullable<int> nPOID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Merchant_ApproveNPORequest", usernameParameter, nPOIDParameter);
        }
    
        public virtual int CampaignDealInstance_Remove(Nullable<int> dealInstanceID, Nullable<int> campaignID)
        {
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CampaignDealInstance_Remove", dealInstanceIDParameter, campaignIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListForNPO(string username, Nullable<int> cityID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListForNPO", usernameParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListForNPO(string username, Nullable<int> cityID, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListForNPO", mergeOption, usernameParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListGlobalPartnersByNPO(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListGlobalPartnersByNPO", usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListGlobalPartnersByNPO(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListGlobalPartnersByNPO", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListLocalPartnersByNPO(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListLocalPartnersByNPO", usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListLocalPartnersByNPO(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListLocalPartnersByNPO", mergeOption, usernameParameter);
        }
    
        public virtual int Campaign_MarkAsActive(Nullable<int> campaignID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Campaign_MarkAsActive", campaignIDParameter);
        }
    
        public virtual ObjectResult<MerchantSetting> MerchantSettings_GetByMerchantID(Nullable<int> merchantID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantSetting>("MerchantSettings_GetByMerchantID", merchantIDParameter);
        }
    
        public virtual ObjectResult<MerchantSetting> MerchantSettings_GetByMerchantID(Nullable<int> merchantID, MergeOption mergeOption)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantSetting>("MerchantSettings_GetByMerchantID", mergeOption, merchantIDParameter);
        }
    
        public virtual int Merchant_InsertNPOPartner(Nullable<int> merchantID, Nullable<int> nPOID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Merchant_InsertNPOPartner", merchantIDParameter, nPOIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListEligiblePartnersByNPO(string username, Nullable<int> cityID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListEligiblePartnersByNPO", usernameParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListEligiblePartnersByNPO(string username, Nullable<int> cityID, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListEligiblePartnersByNPO", mergeOption, usernameParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> NPO_HasPartners(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("NPO_HasPartners", usernameParameter);
        }
    
        public virtual ObjectResult<City> City_GetByName(string cityName, string provinceCode, string countryCode)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("City_GetByName", cityNameParameter, provinceCodeParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<City> City_GetByName(string cityName, string provinceCode, string countryCode, MergeOption mergeOption)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var provinceCodeParameter = provinceCode != null ?
                new ObjectParameter("ProvinceCode", provinceCode) :
                new ObjectParameter("ProvinceCode", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("City_GetByName", mergeOption, cityNameParameter, provinceCodeParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<MerchantInfo> MerchantInfo_Get(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantInfo>("MerchantInfo_Get", usernameParameter);
        }
    
        public virtual ObjectResult<MerchantInfo> MerchantInfo_Get(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MerchantInfo>("MerchantInfo_Get", mergeOption, usernameParameter);
        }
    
        public virtual int MerchantInfo_Insert(string username, string name, string phoneNumber, string merchantDescription)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var merchantDescriptionParameter = merchantDescription != null ?
                new ObjectParameter("MerchantDescription", merchantDescription) :
                new ObjectParameter("MerchantDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MerchantInfo_Insert", usernameParameter, nameParameter, phoneNumberParameter, merchantDescriptionParameter);
        }
    
        public virtual ObjectResult<Deal_Get_Result> Deal_Get(Nullable<int> dealid)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Deal_Get_Result>("Deal_Get", dealidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Deal_Insert(Nullable<int> merchantid, string name, string dealdescription, Nullable<int> absolutecouponlimit, Nullable<int> limitpercustomer, string imageURL)
        {
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var dealdescriptionParameter = dealdescription != null ?
                new ObjectParameter("dealdescription", dealdescription) :
                new ObjectParameter("dealdescription", typeof(string));
    
            var absolutecouponlimitParameter = absolutecouponlimit.HasValue ?
                new ObjectParameter("absolutecouponlimit", absolutecouponlimit) :
                new ObjectParameter("absolutecouponlimit", typeof(int));
    
            var limitpercustomerParameter = limitpercustomer.HasValue ?
                new ObjectParameter("limitpercustomer", limitpercustomer) :
                new ObjectParameter("limitpercustomer", typeof(int));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("imageURL", imageURL) :
                new ObjectParameter("imageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Deal_Insert", merchantidParameter, nameParameter, dealdescriptionParameter, absolutecouponlimitParameter, limitpercustomerParameter, imageURLParameter);
        }
    
        public virtual int Deal_Update(Nullable<int> dealid, Nullable<int> merchantid, string name, string dealdescription, Nullable<int> absolutecouponlimit, Nullable<int> limitpercustomer, string imageURL)
        {
            var dealidParameter = dealid.HasValue ?
                new ObjectParameter("dealid", dealid) :
                new ObjectParameter("dealid", typeof(int));
    
            var merchantidParameter = merchantid.HasValue ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var dealdescriptionParameter = dealdescription != null ?
                new ObjectParameter("dealdescription", dealdescription) :
                new ObjectParameter("dealdescription", typeof(string));
    
            var absolutecouponlimitParameter = absolutecouponlimit.HasValue ?
                new ObjectParameter("absolutecouponlimit", absolutecouponlimit) :
                new ObjectParameter("absolutecouponlimit", typeof(int));
    
            var limitpercustomerParameter = limitpercustomer.HasValue ?
                new ObjectParameter("limitpercustomer", limitpercustomer) :
                new ObjectParameter("limitpercustomer", typeof(int));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("imageURL", imageURL) :
                new ObjectParameter("imageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deal_Update", dealidParameter, merchantidParameter, nameParameter, dealdescriptionParameter, absolutecouponlimitParameter, limitpercustomerParameter, imageURLParameter);
        }
    
        public virtual int Deal_FinePrint_Remove(Nullable<int> dealID, Nullable<int> finePrintID)
        {
            var dealIDParameter = dealID.HasValue ?
                new ObjectParameter("DealID", dealID) :
                new ObjectParameter("DealID", typeof(int));
    
            var finePrintIDParameter = finePrintID.HasValue ?
                new ObjectParameter("FinePrintID", finePrintID) :
                new ObjectParameter("FinePrintID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deal_FinePrint_Remove", dealIDParameter, finePrintIDParameter);
        }
    
        public virtual int FinePrint_AddToDeal(Nullable<int> dealID, Nullable<int> finePrintID)
        {
            var dealIDParameter = dealID.HasValue ?
                new ObjectParameter("DealID", dealID) :
                new ObjectParameter("DealID", typeof(int));
    
            var finePrintIDParameter = finePrintID.HasValue ?
                new ObjectParameter("FinePrintID", finePrintID) :
                new ObjectParameter("FinePrintID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FinePrint_AddToDeal", dealIDParameter, finePrintIDParameter);
        }
    
        public virtual ObjectResult<FinePrint> FinePrint_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinePrint>("FinePrint_List");
        }
    
        public virtual ObjectResult<FinePrint> FinePrint_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinePrint>("FinePrint_List", mergeOption);
        }
    
        public virtual ObjectResult<FinePrint> FinePrint_ListByDeal(Nullable<int> dealID)
        {
            var dealIDParameter = dealID.HasValue ?
                new ObjectParameter("DealID", dealID) :
                new ObjectParameter("DealID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinePrint>("FinePrint_ListByDeal", dealIDParameter);
        }
    
        public virtual ObjectResult<FinePrint> FinePrint_ListByDeal(Nullable<int> dealID, MergeOption mergeOption)
        {
            var dealIDParameter = dealID.HasValue ?
                new ObjectParameter("DealID", dealID) :
                new ObjectParameter("DealID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinePrint>("FinePrint_ListByDeal", mergeOption, dealIDParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_ListNPOPartners(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_ListNPOPartners", usernameParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_ListNPOPartners(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_ListNPOPartners", mergeOption, usernameParameter);
        }
    
        public virtual int RemovePartnership(Nullable<int> nPOID, Nullable<int> merchantID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemovePartnership", nPOIDParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_List");
        }
    
        public virtual ObjectResult<NPO> NPO_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_List", mergeOption);
        }
    
        public virtual ObjectResult<NPOSetting> NPOSetting_Get(Nullable<int> nPOID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPOSetting>("NPOSetting_Get", nPOIDParameter);
        }
    
        public virtual ObjectResult<NPOSetting> NPOSetting_Get(Nullable<int> nPOID, MergeOption mergeOption)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPOSetting>("NPOSetting_Get", mergeOption, nPOIDParameter);
        }
    
        public virtual int NPOSetting_Insert(Nullable<int> nPOID, Nullable<bool> autoAcceptMerchantRequests)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            var autoAcceptMerchantRequestsParameter = autoAcceptMerchantRequests.HasValue ?
                new ObjectParameter("AutoAcceptMerchantRequests", autoAcceptMerchantRequests) :
                new ObjectParameter("AutoAcceptMerchantRequests", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPOSetting_Insert", nPOIDParameter, autoAcceptMerchantRequestsParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListPartnersByNPO(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListPartnersByNPO", usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> Merchant_ListPartnersByNPO(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("Merchant_ListPartnersByNPO", mergeOption, usernameParameter);
        }
    
        public virtual int InsertPartnership(Nullable<int> nPOID, Nullable<int> merchantID)
        {
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPartnership", nPOIDParameter, merchantIDParameter);
        }
    
        public virtual int NPO_InsertMerchantPartner(Nullable<int> merchantID, Nullable<int> nPOID)
        {
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            var nPOIDParameter = nPOID.HasValue ?
                new ObjectParameter("NPOID", nPOID) :
                new ObjectParameter("NPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_InsertMerchantPartner", merchantIDParameter, nPOIDParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_ListEligiblePartnersByMerchant(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_ListEligiblePartnersByMerchant", usernameParameter);
        }
    
        public virtual ObjectResult<NPO> NPO_ListEligiblePartnersByMerchant(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NPO>("NPO_ListEligiblePartnersByMerchant", mergeOption, usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> NPO_ListMerchantRequests(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("NPO_ListMerchantRequests", usernameParameter);
        }
    
        public virtual ObjectResult<Merchant> NPO_ListMerchantRequests(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Merchant>("NPO_ListMerchantRequests", mergeOption, usernameParameter);
        }
    
        public virtual int NPO_ApproveMerchantRequest(string username, Nullable<int> merchantID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("MerchantID", merchantID) :
                new ObjectParameter("MerchantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPO_ApproveMerchantRequest", usernameParameter, merchantIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListByCity(string cityName, string countryName)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListByCity", cityNameParameter, countryNameParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_ListByCity(string cityName, string countryName, MergeOption mergeOption)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_ListByCity", mergeOption, cityNameParameter, countryNameParameter);
        }
    
        public virtual ObjectResult<PurchaseOrder> PurchaseOrder_ListUnredeemedByMerchant(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseOrder>("PurchaseOrder_ListUnredeemedByMerchant", usernameParameter);
        }
    
        public virtual ObjectResult<PurchaseOrder> PurchaseOrder_ListUnredeemedByMerchant(string username, MergeOption mergeOption)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseOrder>("PurchaseOrder_ListUnredeemedByMerchant", mergeOption, usernameParameter);
        }
    
        public virtual int PurchaseOrder_Redeem(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrder_Redeem", purchaseOrderIDParameter);
        }
    
        public virtual int PurchaseOrder_Unredeem(Nullable<int> purchaseOrderID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseOrder_Unredeem", purchaseOrderIDParameter);
        }
    
        public virtual ObjectResult<DealInstance> Deal_ListByCity(string city, string politicalDivision)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var politicalDivisionParameter = politicalDivision != null ?
                new ObjectParameter("PoliticalDivision", politicalDivision) :
                new ObjectParameter("PoliticalDivision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("Deal_ListByCity", cityParameter, politicalDivisionParameter);
        }
    
        public virtual ObjectResult<DealInstance> Deal_ListByCity(string city, string politicalDivision, MergeOption mergeOption)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var politicalDivisionParameter = politicalDivision != null ?
                new ObjectParameter("PoliticalDivision", politicalDivision) :
                new ObjectParameter("PoliticalDivision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DealInstance>("Deal_ListByCity", mergeOption, cityParameter, politicalDivisionParameter);
        }
    
        public virtual ObjectResult<string> CampaignDealInstance_Exists(Nullable<int> campaignID, Nullable<int> dealInstanceID)
        {
            var campaignIDParameter = campaignID.HasValue ?
                new ObjectParameter("CampaignID", campaignID) :
                new ObjectParameter("CampaignID", typeof(int));
    
            var dealInstanceIDParameter = dealInstanceID.HasValue ?
                new ObjectParameter("DealInstanceID", dealInstanceID) :
                new ObjectParameter("DealInstanceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CampaignDealInstance_Exists", campaignIDParameter, dealInstanceIDParameter);
        }
    
        public virtual ObjectResult<Campaign> Campaign_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_List");
        }
    
        public virtual ObjectResult<Campaign> Campaign_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Campaign>("Campaign_List", mergeOption);
        }
    
        public virtual int NPOSettings_Update(string username, Nullable<bool> autoAcceptMerchantRequests)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var autoAcceptMerchantRequestsParameter = autoAcceptMerchantRequests.HasValue ?
                new ObjectParameter("AutoAcceptMerchantRequests", autoAcceptMerchantRequests) :
                new ObjectParameter("AutoAcceptMerchantRequests", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NPOSettings_Update", usernameParameter, autoAcceptMerchantRequestsParameter);
        }
    
        public virtual ObjectResult<City> City_GetByNameWithProvinceAndCountry(string cityName, string provinceName, string countryName)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var provinceNameParameter = provinceName != null ?
                new ObjectParameter("ProvinceName", provinceName) :
                new ObjectParameter("ProvinceName", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("City_GetByNameWithProvinceAndCountry", cityNameParameter, provinceNameParameter, countryNameParameter);
        }
    
        public virtual ObjectResult<City> City_GetByNameWithProvinceAndCountry(string cityName, string provinceName, string countryName, MergeOption mergeOption)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var provinceNameParameter = provinceName != null ?
                new ObjectParameter("ProvinceName", provinceName) :
                new ObjectParameter("ProvinceName", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("City_GetByNameWithProvinceAndCountry", mergeOption, cityNameParameter, provinceNameParameter, countryNameParameter);
        }
    
        public virtual int News_Delete(Nullable<int> newsID)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("News_Delete", newsIDParameter);
        }
    
        public virtual int News_Edit(Nullable<int> newsID, string name, string content)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("News_Edit", newsIDParameter, nameParameter, contentParameter);
        }
    
        public virtual int News_Insert(string name, string content)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("News_Insert", nameParameter, contentParameter);
        }
    
        public virtual ObjectResult<News> News_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_List");
        }
    
        public virtual ObjectResult<News> News_List(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_List", mergeOption);
        }
    
        public virtual ObjectResult<News> News_ListByMonth(Nullable<System.DateTime> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_ListByMonth", monthParameter);
        }
    
        public virtual ObjectResult<News> News_ListByMonth(Nullable<System.DateTime> month, MergeOption mergeOption)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_ListByMonth", mergeOption, monthParameter);
        }
    
        public virtual int OAuthToken_Insert(Nullable<int> oAuthProviderID, string username, string userID, string accessToken)
        {
            var oAuthProviderIDParameter = oAuthProviderID.HasValue ?
                new ObjectParameter("OAuthProviderID", oAuthProviderID) :
                new ObjectParameter("OAuthProviderID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var accessTokenParameter = accessToken != null ?
                new ObjectParameter("AccessToken", accessToken) :
                new ObjectParameter("AccessToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OAuthToken_Insert", oAuthProviderIDParameter, usernameParameter, userIDParameter, accessTokenParameter);
        }
    
        public virtual ObjectResult<City> Cities_ListWhereActiveDeals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("Cities_ListWhereActiveDeals");
        }
    
        public virtual ObjectResult<City> Cities_ListWhereActiveDeals(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<City>("Cities_ListWhereActiveDeals", mergeOption);
        }
    
        public virtual int PurchaseTransaction_Failed(Nullable<int> purchaseTransactionID)
        {
            var purchaseTransactionIDParameter = purchaseTransactionID.HasValue ?
                new ObjectParameter("PurchaseTransactionID", purchaseTransactionID) :
                new ObjectParameter("PurchaseTransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchaseTransaction_Failed", purchaseTransactionIDParameter);
        }
    
        public virtual int PaymentOption_Insert(string username, Nullable<int> cardTypeID, string last4Digits, string stripeToken, string address, string city, string province, string postal, string country)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("CardTypeID", cardTypeID) :
                new ObjectParameter("CardTypeID", typeof(int));
    
            var last4DigitsParameter = last4Digits != null ?
                new ObjectParameter("Last4Digits", last4Digits) :
                new ObjectParameter("Last4Digits", typeof(string));
    
            var stripeTokenParameter = stripeToken != null ?
                new ObjectParameter("StripeToken", stripeToken) :
                new ObjectParameter("StripeToken", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            var postalParameter = postal != null ?
                new ObjectParameter("Postal", postal) :
                new ObjectParameter("Postal", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentOption_Insert", usernameParameter, cardTypeIDParameter, last4DigitsParameter, stripeTokenParameter, addressParameter, cityParameter, provinceParameter, postalParameter, countryParameter);
        }
    }
}
